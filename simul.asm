;UNIVERSIDAD CENTRAL DE VENEZUELA
;FACULTAD DE INGENIERÍA
;ESCUELA DE INGENIERÍA ELÉCTRICA
;MICROPROCESADORES I
;PRÁCTICA 2: ESCLAVO SERIAL PARA MANEJAR PUERTO POR BYTE Y POR BIT
;14/05/2015
;EDGAR GÓMEZ	C.I:20567158
;PROGRAMA PRINCIPAL

CSEG	AT 0000H	;DEFINE SEGMENTO DE CÓDIGO INICIANDO EN 0000H

JMP INICIO		;AL RESETEARSE, EL PC APUNTA A 0000H, POR LO QUE LA PRÓXIMA INSTRUCCIÓN EN EJECUTARSE
			;SERÁ EL SALTO A LA ETIQUETA "INICIO"
           
ORG 000BH               ;ENTRADA A LA INTERRUPCION DEL TIMER0
    JMP INT_TIMER
ORG 0023H               ;ENTRADA A LA INTERRUPCION DEL PUERTO SERIAL
    LJMP REIPS

;-----------INICIO DE PROGRAMA PRINCIPAL----
INICIO:

LCALL MODOS

RECIBIENDO:

        ;-------LLEGA EL BYTE DE INICIO : ---------------

	JNB RI, RECIBIENDO       ;VERIFICO SI SBUF DE ENTRADA ESTÁ OCUPADO ME QUEDO ALLI HASTA QUE SE ACTIVE LA INTERRUPCION
	MOV R0,A                 ;GUARDO EL VALOR DE : EN EL REGISTRO 0
	CLR 20H.0                ;LIMPIO ESTE VALOR QUE ME DICE QUE LLEGO ALGO
	CJNE R0,#03AH,RECIBIENDO ;VERIFICO AL SALIR DE LA INTERRUPCION QUE EL VALOR RECIBIDO SEA :
	MOV P0,P1                ;CON ESTO CONTROLO LOS RELE CON LA ENTRADA DIGITLA DEL MICRO CUANDO ME LE LLEGUE :

        ;-------LLEGA EL IDENTIFICADOR DEL ESCLAVO---------------
	
        MOV R7,#000H     ;INICIALIZO EL REGISTRO 7 EN 0
        SETB TR0         ;INCIO EL TIMER 0
        ESPERA1:
        JB 20H.0,NO_ESPERA1   ;SI SE RECIBE ALGO BRICO A NO_ESPERA1
        CJNE R7,#064H,ESPERA1 ;ME QUEDO AQUI HASTA QUE PASEN 5s CAMBIAR VALOR!!!!!!!
        NO_ESPERA1:
        CLR TF0                  ;LIMPIO LA BANDERA DE QUE OCURRIO UN DESBORADMIENTO
        CLR TR0                 ;DETENGO EL TIMER0
        JNB 20H.0,RECIBIENDO    ;SALTO A RECIBIENDO SI NO SE ACTIVA LA BANDERA DE RECIBIR
        CLR 20H.0                ;LIMPIO ESTE VALOR QUE ME DICE QUE LLEGO ALGO
        MOV R1,A             ;GUARDO EL VALOR QUE LLEGO, EL BYTE DE IDETIFICADOR DEL ESCLAVO

        ;MOV 51H,P2            ;MUEVO EL VALOR SELECCIONADO EN EL DIP-SWITCH HACIA UN VALOR DE LA MEMORIA
        ;CJNE A,51H,RECIBIENDO ;SI LOS VALORES NO SON IGUALES ESPERO A UNA NUEVA TRAMA
        
        ;-------LLEGA EL BYTE FUNCION WRITE O READ---------------
        
        MOV R7,#000H     ;INICIALIZO EL REGISTRO 7 EN 0
        SETB TR0         ;INCIO EL TIMER 0
        ESPERA2:
        JB 20H.0,NO_ESPERA2   ;SI SE RECIBE ALGO BRINCO A NO_ESPERA2
        CJNE R7,#064H,ESPERA2 ;ME QUEDO AQUI HASTA QUE PASEN 100ms CAMBIAR VALOR!!!!!!!
        NO_ESPERA2:
        CLR TF0                  ;LIMPIO LA BANDERA DE QUE OCURRIO UN DESBORADMIENTO
        CLR TR0                  ;DETENGO EL TIMER0
        JNB 20H.0,RECIBIENDO ;SALTO A RECIBIENDO SI NO SE ACTIVA LA BANDERA DE RECIBIR
        CLR 20H.0            ;LIMPIO ESTE VALOR QUE ME DICE QUE LLEGO ALGO
        MOV R2,A             ;GUARDO EL VALOR QUE LLEGO, EL BYTE DE FUNCION WRITE O READ

        ;-------LLEGA EL BYTE W---------------
        
        WRITE:
        CJNE R2,#057H,READ   ;SINO ES W BRINCO A READ
        
        ;-------LLEGA EL BYTE DE NUMERO DEL RELE---------------
        
        MOV R7,#000H     ;INICIALIZO EL REGISTRO 7 EN 0
        SETB TR0         ;INCIO EL TIMER 0
        ESPERA3:
        JB 20H.0,NO_ESPERA3   ;SI SE RECIBE ALGO BRINCO A NO_ESPERA3
        CJNE R7,#064H,ESPERA3 ;ME QUEDO AQUI HASTA QUE PASEN 100ms CAMBIAR VALOR!!!!!!!
        NO_ESPERA3:
        CLR TF0                  ;LIMPIO LA BANDERA DE QUE OCURRIO UN DESBORADMIENTO
        CLR TR0                  ;DETENGO EL TIMER0
        JNB 20H.0,RECIBIENDO ;SALTO A RECIBIENDO SI NO SE ACTIVA LA BANDERA DE 
        CLR 20H.0            ;LIMPIO ESTE VALOR QUE ME DICE QUE LLEGO ALGO
        SUBB A,#040H         ;RESTO LO QUE LLEGO MENOS 41 PARA QUE EL CHECKSUM NO SE DESBORDE A RES DIGITOS
        MOV R3,A             ;GUARDO EL VALOR QUE LLEGO, EL BYTE DE NUMERO DEL RELE

        ;-------LLEGA EL BYTE DE ACCION OPEN O CLOSE---------------
        
        MOV R7,#000H     ;INICIALIZO EL REGISTRO 7 EN 0
        SETB TR0         ;INCIO EL TIMER 0
        ESPERA4:
        JB 20H.0,NO_ESPERA4   ;SI SE RECIBE ALGO BRINCO A NO_ESPERA4
        CJNE R7,#064H,ESPERA4 ;ME QUEDO AQUI HASTA QUE PASEN 100ms CAMBIAR VALOR!!!!!!!
        NO_ESPERA4:
        CLR TF0                  ;LIMPIO LA BANDERA DE QUE OCURRIO UN DESBORADMIENTO
        CLR TR0                  ;DETENGO EL TIMER0
        JNB 20H.0,RECIBIENDO ;SALTO A RECIBIENDO SI NO SE ACTIVA LA BANDERA DE RECIBIR
        CLR 20H.0            ;LIMPIO ESTE VALOR QUE ME DICE QUE LLEGO ALGO
        MOV R4,A             ;GUARDO EL VALOR QUE LLEGO, EL BYTE DE NUMERO DEL RELE

        ;-------LLEGA EL BYTE DE CHECKSUM---------------
        
        MOV R7,#000H     ;INICIALIZO EL REGISTRO 7 EN 0
        SETB TR0         ;INCIO EL TIMER 0
        ESPERA5:
        JB 20H.0,NO_ESPERA5   ;SI SE RECIBE ALGO BRINCO A NO_ESPERA5
        CJNE R7,#064H,ESPERA5 ;ME QUEDO AQUI HASTA QUE PASEN 100ms CAMBIAR VALOR!!!!!!!
        NO_ESPERA5:
        CLR TF0                  ;LIMPIO LA BANDERA DE QUE OCURRIO UN DESBORADMIENTO
        CLR TR0                  ;DETENGO EL TIMER0
        JNB 20H.0,RECIBIENDO ;SALTO A RECIBIENDO SI NO SE ACTIVA LA BANDERA DE RECIBIR
        CLR 20H.0            ;LIMPIO ESTE VALOR QUE ME DICE QUE LLEGO ALGO
        MOV R5,A             ;GUARDO EL VALOR QUE LLEGO, EL BYTE DE CHESCKSUM

        ;-------VERIFICACION DEL CHECKSUM--------------
        CLR C         ;LIMPIO EL ACUMULADOR
        CLR 20H.7     ;LIMPIO EL BIT QUE ME DICE SI HUBO CARRY O NO
        MOV A,R1      ;MUEVO R1 AL ACUMULADOR PARA SER SUMADO
        ADD A,R2      ;SUMO R1 Y R2
        JNB C,NO_CARRY_1 ;SI EN LA SUMA NO CARRY SALTO A NO_CARRY_1 SINO 20H.7 LO PONGO EN 1
        SETB 20H.7
        NO_CARRY_1:
        ADD A,R3         ;SUMO R3
        JNB C,NO_CARRY_2 ;SI EN LA SUMA NO CARRY SALTO A NO_CARRY_2 SINO 20H.7 LO PONGO EN 1
        SETB 20H.7
        NO_CARRY_2:
        ADD A,R4         ;SUMO R4
        JNB C,NO_CARRY_3 ;SI EN LA SUMA NO CARRY SALTO A NO_CARRY_2 SINO 20H.7 LO PONGO EN 1
        SETB 20H.7
        NO_CARRY_3:
        JB 20H.7,HAY_CARRY ;SI HUBO CARRY EN CUALQUIERA DE LAS SUMAS SALTO A HAY CARRY SINO RESTO #FFH MENOS LA SUMA PARA OBTNER EL CHECKSUM
        MOV B,A
        MOV A,#0FFH
        SUBB A,B
        HAY_CARRY:
        
        MOV 40H,R5    ;MUEVO EL CHECKSUM RECIBIDO A UNA POSICION DE MEMORIA
        CJNE A,40H,FINAL_2 ;COMPARO EL CHECKSUM RECIBIDO CON EL SUMADO SI NO SON IGUALES ESPERO UNA NUEVA TRAMA Y NO HAGO NADA

        ;-------OPERACION OPEN-CLOSE RELE---------------

        READ:
        CJNE R2,#057H,READ2   ;SINO ES W BRINCO A READ2 ESTO PORQUE LAS ETIQUETAS QUEDARON MUY LEJOS MAS DE 8BITS

        LCALL VERIFICACION_DE_OPEN_CLOSE 
        
        CJNE R3,#000H,PUERTO_1     ;SE VERIFICA SI R3 ES EL PUERTO 0 SINO SALTO 1 Y SE VERIFICA SI R3 ES EL PUERTO 1 SINO SALTO Y ASI SUCESIVAMENTE SE SELECCIONA EL PUERTO EN EL CUAL REALIZAR LA INSTRUCCION OPEN O CLOSE
        JB 20H.1,PUERTO_0_ACTIVO   ;SI 20H.1 ES 1 SE SALTA A PUERTO_#_ACTIVO Y SE COLOCA ESTE EN 1 CON SETB P0.#
        CLR P0.0                   ;SI 20H.1 ES 0 SE COLOCA ELPUERTO_# EN 0 CON 
        JMP LISTO_0                ;SE SALTA A LISTO_# PARA EVITAR COLOCAR UN 1 EN ESE PUERTO 
        PUERTO_0_ACTIVO:
        SETB P0.0
        LISTO_0:

        ;LO EXPLICADO ANTERIORMENTE SIRVE PARA LOS PUERTOS RESTANTES SI SE QUIERE COLOCAR UN 1 O UN CERO OPEN CLOSE

        PUERTO_1:
        CJNE R3,#001H,PUERTO_2
        JB 20H.1,PUERTO_1_ACTIVO
        CLR P0.1
        JMP LISTO_1
        PUERTO_1_ACTIVO:
        SETB P0.1
        LISTO_1:

        PUERTO_2:
        CJNE R3,#002H,PUERTO_3
        JB 20H.1,PUERTO_2_ACTIVO
        CLR P0.2
        JMP LISTO_2
        PUERTO_2_ACTIVO:
        SETB P0.2
        LISTO_2:

        PUERTO_3:
        CJNE R3,#003H,PUERTO_4
        JB 20H.1,PUERTO_3_ACTIVO
        CLR P0.3
        JMP LISTO_3
        PUERTO_3_ACTIVO:
        SETB P0.3
        LISTO_3:        

        PUERTO_4:
        CJNE R3,#004H,PUERTO_5
        JB 20H.1,PUERTO_4_ACTIVO
        CLR P0.4
        JMP LISTO_4
        PUERTO_4_ACTIVO:
        SETB P0.4
        LISTO_4: 

        PUERTO_5:
        CJNE R3,#005H,PUERTO_6
        JB 20H.1,PUERTO_5_ACTIVO
        CLR P0.5
        JMP LISTO_5
        PUERTO_5_ACTIVO:
        SETB P0.5
        LISTO_5:         

        PUERTO_6:
        CJNE R3,#006H,PUERTO_7
        JB 20H.1,PUERTO_6_ACTIVO
        CLR P0.6
        JMP LISTO_5
        PUERTO_6_ACTIVO:
        SETB P0.6
        LISTO_6:         

        PUERTO_7:
        CJNE R3,#007H,FINAL_2
        JB 20H.1,PUERTO_7_ACTIVO
        CLR P0.7
        JMP LISTO_7
        PUERTO_7_ACTIVO:
        SETB P0.7
        LISTO_7:  

        FINAL_2:
        JMP FINAL_WRITE       ;AL TERMINAR TODA FUNCION CON WRITE ME SALTO LA DE READ

        ;-------LLEGA EL BYTE R---------------
        
        READ2:
        CJNE R2,#052H,FINAL_22 ;SINO ES R BRINCO A RECIBIENDO Y ESPERO UNA TRAMA NUEVA

        ;-------LLEGA EL BYTE DE NUMERO DEL RELE---------------
        
        MOV R7,#000H     ;INICIALIZO EL REGISTRO 7 EN 0
        SETB TR0         ;INCIO EL TIMER 0
        ESPERA6:
        JB 20H.0,NO_ESPERA6   ;SI SE RECIBE ALGO BRINCO A NO_ESPERA6
        CJNE R7,#064H,ESPERA6 ;ME QUEDO AQUI HASTA QUE PASEN 100ms CAMBIAR VALOR!!!!!!!
        NO_ESPERA6:
        CLR TF0                  ;LIMPIO LA BANDERA DE QUE OCURRIO UN DESBORADMIENTO
        CLR TR0                  ;DETENGO EL TIMER0
        JNB 20H.0,FINAL_AUX ;SALTO A RECIBIENDO SI NO SE ACTIVA LA BANDERA DE RECIBIR
        CLR 20H.0            ;LIMPIO ESTE VALOR QUE ME DICE QUE LLEGO ALGO
        SUBB A,#040H         ;RESTO LO QUE LLEGO MENOS 41 PARA QUE EL CHECKSUM NO SE DESBORDE A RES DIGITOS
        MOV R3,A             ;GUARDO EL VALOR QUE LLEGO, EL BYTE DE NUMERO DEL RELE

        ;-------LLEGA EL BYTE DE CHECKSUM---------------
        
        MOV R7,#000H     ;INICIALIZO EL REGISTRO 7 EN 0
        SETB TR0         ;INCIO EL TIMER 0
        ESPERA7:
        JB 20H.0,NO_ESPERA7   ;SI SE RECIBE ALGO BRINCO A NO_ESPERA7
        CJNE R7,#064H,ESPERA7 ;ME QUEDO AQUI HASTA QUE PASEN 100ms CAMBIAR VALOR!!!!!!!
        NO_ESPERA7:
        CLR TF0                  ;LIMPIO LA BANDERA DE QUE OCURRIO UN DESBORADMIENTO
        CLR TR0                  ;DETENGO EL TIMER0
        FINAL_AUX:                 
        JNB 20H.0,FINAL ;SALTO A RECIBIENDO SI NO SE ACTIVA LA BANDERA DE RECIBIR
        CLR 20H.0            ;LIMPIO ESTE VALOR QUE ME DICE QUE LLEGO ALGO
        MOV R5,A             ;GUARDO EL VALOR QUE LLEGO, EL BYTE DE CHESCKSUM

        FINAL_22:
        CJNE R2,#052H,FINAL   ;SINO ES R BRINCO A RECIBIENDO Y ESPERO UNA TRAMA NUEVA

        ;-------VERIFICACION DEL CHECKSUM--------------

        ;MISMA EXPLICACION DEL CHECKSUM ANTERIOR SOLO QUE NO SUMO EL BYTE DE OPEN O CLOSE Y LOS SALTOS SON A ETIQUETAS DIFERENTES
        
        CLR C
        CLR 20H.7
        MOV A,R1      ;
        ADD A,R2
        JNB C,NO_CARRY_1_R
        SETB 20H.7
        NO_CARRY_1_R:
        ADD A,R3
        JNB C,NO_CARRY_2_R
        SETB 20H.7
        NO_CARRY_2_R:
        JB 20H.7,HAY_CARRY_R
        MOV B,A
        MOV A,#0FFH
        SUBB A,B
        HAY_CARRY_R:
        
        MOV 40H,R5    ;MUEVO EL CHECKSUM RECIBIDO A UNA POSICION DE MEMORIA
        CJNE A,40H,FINAL ;COMPARO EL CHECKSUM RECIBIDO CON EL SUMADO SI NO SON IGUALES ESPERO UNA NUEVA TRAMA Y NO HAGO NADA

        ;----------MANDO EL ESTADO DEL RELE OPEN O CLOSE--------------

        CLR C         ;BORRO EL ACUMULADOR EN CASO DE QUE HALLA QUEDADO ALGO AL REALIZAR EL CHECKSUM
        CJNE R3,#000H,PUERTO_1_READ   ;VEO CUAL ES EL RELE A CAMBIAR SI NO ES ESE SALTO AL
                                      ;SIGUIENTE
        MOV C,P1.0                    ;MUEVO EL VALOR DEL RELE AL CARRY
        LCALL READ_AL_BUFER           ;LLAMO A LA SUBRUTINA READ_AL BUFER

        ;MISMA EXPLIACIÓN ANTERIOR
        PUERTO_1_READ:
        CJNE R3,#001H,PUERTO_2_READ
        MOV C,P1.1
        LCALL READ_AL_BUFER

        PUERTO_2_READ:
        CJNE R3,#002H,PUERTO_3_READ
        MOV C,P1.2
        LCALL READ_AL_BUFER
        
        PUERTO_3_READ:
        CJNE R3,#003H,PUERTO_4_READ
        MOV C,P1.3
        LCALL READ_AL_BUFER
       
        PUERTO_4_READ:
        CJNE R3,#004H,PUERTO_5_READ
        MOV C,P1.4
        LCALL READ_AL_BUFER
    
        PUERTO_5_READ:
        CJNE R3,#005H,PUERTO_6_READ
        MOV C,P1.5
        LCALL READ_AL_BUFER

        PUERTO_6_READ:
        CJNE R3,#006H,PUERTO_7_READ
        MOV C,P1.6
        LCALL READ_AL_BUFER

        PUERTO_7_READ:
        CJNE R3,#007H,FINAL
        MOV C,P1.7
        LCALL READ_AL_BUFER 
   
        FINAL_WRITE:
	FINAL:
        JMP RECIBIENDO   ;ME DEVUELVE AL INICO
	JMP $		;NUNCA SE EJECUTA. SI SE EJECUTARA NO HACE NADA. SIEMPRE SE COLOCA
;---------------INTERRUPCIONES-----------------
INT_TIMER:
        CLR TF0         ;LIMPIO LA BANDERA DE QUE OCURRIO UN DESBORADMIENTO A LOS 50ms
        CLR TR0        ;DETENGO EL TIMER0
        MOV TH0,#04BH            ;VALOR INICAL DE CONTEO DEL TIMER 0 PARA TENER 50ms A 11.059 Mhz
        MOV TL0,#0FDH            ;VALOR INICAL DE CONTEO DEL TIMER 0 PARA TENER 50ms A 11.059 Mhz
        INC R7                   ;INCREMENTO EL VALOR DEL REGISTRO 7 
        CJNE R7,#064H,INICIA     ;SI REGISTRO 7 NO ES IGUAL A 64 SALTO A INICIA Y PRENDO EL TIMER 0 DE NUEVO
        JMP NO_INICIA            ;SI REGISTRO 7 ES IGUAL A 2 NO ENCIENDO EL TIMER 0 YA QUE SE CUMPLIÓ EL TIEMPO DE ESPERA 
        INICIA: SETB TR0
        NO_INICIA:
RETI                            ;ME DEVUELVE AL FLUJO DEL PROGRAMA DONDE SE REALIZÓ LA INTERRUPCION

REIPS:
        MOV A,SBUF      ;MUEVO EL DATO QUE LLEGÓ AL ACUMULADOR
        SETB 20H.0      ;COLOCO 20H.0 EN 1
        CLR RI          ;LIMPIO LA BANDERA QUE INDICA QUE  YA SE RECIBIÓ LO QUE ESTABA EN EL BUFER DE ENTRADA
        CLR TI
RETI                    ;ME DEVUELVE AL FLUJO DEL PROGRAMA DONDE SE REALIZÓ LA INTERRUPCION
  
;-----------FIN DE LA RUTINA----------------

MODOS:
;---DEFINICION DE LOS MODOS TIMER, INTERRUPCIONES, PERTO SERIAL----
        
	MOV TMOD,#10101001B      ;TIMER 0 MODO 1 16 BIT, TIMER 1 MODO 2 8 BIT
        MOV TH1,#0F4H            ;VALOR INICAL DE CONTEO DEL TIMER 1 PARA TENER 2400BAUDS A 11.059 Mhz
        MOV TL1,#0F4H
	MOV TH0,#04BH            ;VALOR INICAL DE CONTEO DEL TIMER 0 PARA TENER 50ms A 11.059 Mhz
        MOV TL0,#0FDH            ;VALOR INICAL DE CONTEO DEL TIMER 0 PARA TENER 50ms A 11.059 Mhz
        MOV SCON,#50H            ;PUERTO SERIAL EN MODO UART DE 8 BITS
	SETB TR1                 ;ENCIENDO EL TIMER1
	SETB EA                  ;HABILITO LA INTERRUPCION GLOBAL
	SETB ES                  ;HABILITO LA INTERRUPCION DEL PUERTO SERIAL
	SETB ET0                 ;HABILITO LA INTERRUPCION DEL TIMER0
        RET
        
VERIFICACION_DE_OPEN_CLOSE:
        CJNE R4,#04FH,ES_CERO    ;SI R4 ES OPEN COLOCO 1 N 20H.1 SI ES CLOSE SALTO A ES_CERO
        SETB 20H.1
        JMP FINAL_OPENCLOSE      ;SALTO A FINAL_OPENCLOSE
        ES_CERO:
        CLR 20H.1                ;SI R4 ES CLOSE COLOCO UN CERO EN 20H.1 
        FINAL_OPENCLOSE:
        RET                      ;REGRESO A MI PROGRAMA
        
READ_AL_BUFER:
        CLR A               ;LIMPIO EL ACUMULADOR
        ADDC A,#000H        ;SUMO EL CARRY AL ACUMULADOR, EL CARRY ES LA CONDICION DEL RELE 
        MOV SBUF,A          ;MANDO LA CONDICION DEL RELE AL VIRTUAL TERMINAL
        RET                 ;REGRESO A MI PROGRAMA
END		            ;INDICA FIN DEL PROGRAMA PRINCIPAL